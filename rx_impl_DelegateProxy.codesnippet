<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>rx_impl_DelegateProxy</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>TopLevel</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>extension &lt;#ClassName#&gt;: HasDelegate {
    public typealias Delegate = &lt;#ClassName#&gt;Delegate
}

/// Delegate proxy of &lt;#ClassName#&gt;
public class Rx&lt;#ClassName#&gt;DelegateProxy : DelegateProxy&lt;&lt;#ClassName#&gt;, &lt;#ClassName#&gt;Delegate&gt; , DelegateProxyType , &lt;#ClassName#&gt;Delegate {
    
    public init(_ parent: &lt;#ClassName#&gt;) {
        super.init(parentObject: parent, delegateProxy: Rx&lt;#ClassName#&gt;DelegateProxy.self)
    }
    
    public static func registerKnownImplementations() {
        self.register { Rx&lt;#ClassName#&gt;DelegateProxy($0) }
    }
    
    // MARK: Example state forwarding
//
//    enum State {
//        case `default`, some
//    }
//
//    internal lazy var didChangeState = PublishSubject&lt;State&gt;()
//
//    public func parrentObjectDidEnterSomeMode(_ parrentObject: CustomNavigationBar) {
//        _forwardToDelegate?.customNavigationBarDidEnterSearchMode(parrentObject)
//        didChangeState.onNext(.some)
//    }
//
//    public func parrentObjectDidExitSomeMode(_ parrentObject: CustomNavigationBar) {
//        _forwardToDelegate?.customNavigationBarDidExitSearchMode(parrentObject)
//        didChangeState.onNext(.default)
//    }
//
//    deinit {
//        self.didChangeState.on(.completed)
//    }
}</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>3268F48D-8854-4025-BE8F-6701C536726A</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetTitle</key>
	<string>Rx Impl: Delegate Proxy Implementation</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
