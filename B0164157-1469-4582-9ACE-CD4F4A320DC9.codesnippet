<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>famSettings</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>TopLevel</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>#ifdef DEBUG
    //#define DEBUG_VIEWS

    // Extended debug log with line number and function name
    #define DLog(fmt,...) NSLog((@"[Line %4d] %s " fmt),__LINE__,__PRETTY_FUNCTION__,##__VA_ARGS__);

    /** View boundries visualization */
    /* If one of following macros is used it will be replaced by code only if there is also defined DEBUG_VIEWS */
    #ifdef DEBUG_VIEWS
        #define SHOW_BORDERS(_view_) SHOW_BORDERS_WITH_COLOR(_view_,[UIColor greenColor])
        #define SHOW_BORDERS_WITH_COLOR(_view_,_color_) SHOW_BORDERS_WITH_COLOR_AND_WIDTH(_view_,_color_,1.0f)
        #define SHOW_BORDERS_WITH_COLOR_AND_WIDTH(_view_,_color_,_border_width_) __SHOW_BORDERS_WITH_COLOR_AND_WIDTH(_view_,_color_,_border_width_)
    #else
        #define SHOW_BORDERS(_view_)
        #define SHOW_BORDERS_WITH_COLOR(_view_,_color_)
        #define SHOW_BORDERS_WITH_COLOR_AND_WIDTH(_view_,_color_,_border_width_)
    #endif
#else

    // removes all NSLogs if not DEBUG
    #define NSLog(...)

    // removing all DEBUG placeholders from the code
    #define IFDEB(code)
    #define DLog(fmt,...)

    #define SHOW_BORDERS(_view_)
    #define SHOW_BORDERS_WITH_COLOR(_view_,_color_)
    #define SHOW_BORDERS_WITH_COLOR_AND_WIDTH(_view_,_color_,_border_width_)
#endif
#define SCREEN_WIDTH [UIScreen mainScreen].bounds.size.width
#define SCREEN_HEIGHT [UIScreen mainScreen].bounds.size.height
#define SCREEN_HALF_WIDTH (SCREEN_WIDTH*0.5f)
#define SCREEN_HALF_HEIGHT (SCREEN_HEIGHT*0.5f)
#define SCREEN_CENTER CGPointMake(SCREEN_HALF_WIDTH,SCREEN_HALF_HEIGHT)
#define SCREEN_FRAME CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT)
#define SCREEN_SIZE CGSizeMake(SCREEN_WIDTH, SCREEN_HEIGHT)

/** Conditional error log */
#define ELogIF(condition,fmt,...) if(condition)NSLog((@"[Line %4d] ### ERROR ### [%s] %s " fmt),__LINE__,FILE_NAME,__PRETTY_FUNCTION__,##__VA_ARGS__);

/** Error log */
#define ELog(fmt,...) NSLog((@"[Line %4d] ### ERROR ### [%s] %s " fmt),__LINE__,FILE_NAME,__PRETTY_FUNCTION__,##__VA_ARGS__);

/** Replaced by file name without path */
#define FILE_NAME (strrchr(__FILE__, '/') ? strrchr(__FILE__, '/') + 1 : __FILE__)

#define __SHOW_BORDERS_WITH_COLOR_AND_WIDTH(_view_,_color_,_border_width_) {/*Definition of the block to display border of all subviews of the view*/__block void(^_show_borders_block)(UIView*)=^(UIView* view){for(UIView* ___sView_ in view.subviews){/*The border frame will be set for the view only if there is no border defined yet or if its width is less than the new one*/if(!(___sView_.layer.borderWidth&gt;_border_width_-1.0f)){___sView_.layer.borderColor=_color_.CGColor;___sView_.layer.borderWidth=_border_width_;}/*set borders of subviews*/_show_borders_block(___sView_);}};/*Set border for the subviews of the _view_*/_show_borders_block(_view_);/*Set border for the _view_*/if(!(_view_.layer.borderWidth&gt;_border_width_-1.0f)){_view_.layer.borderColor=_color_.CGColor;_view_.layer.borderWidth=_border_width_;}}</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>B0164157-1469-4582-9ACE-CD4F4A320DC9</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Objective-C</string>
	<key>IDECodeSnippetSummary</key>
	<string>famSettings</string>
	<key>IDECodeSnippetTitle</key>
	<string>FAM Settings header</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
