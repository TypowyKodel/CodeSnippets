<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>implLoadViewFromNib</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>ClassImplementation</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>@IBOutlet public var contentView: UIView?
    open var customNibName:String? { return nil }
    
    override init(frame: CGRect) {
        super.init(frame: frame)
        self.commonInit()
    }
    
    required public init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        self.commonInit()
    }
    
    public func commonInit() {
    if self.contentView == nil {
        UINib(nibName: self.customNibName ?? NSStringFromClass(type(of: self)).components(separatedBy: ".").last!,
              bundle: Bundle(for: type(of: self))).instantiate(withOwner: self, options: nil)
        if let view = contentView {
            view.frame = self.bounds
            
            // first approach
            view.autoresizingMask = [.flexibleWidth, .flexibleHeight]
            self.addSubview(view)
            
            // second approach
            /*
             view.translatesAutoresizingMaskIntoConstraints = false
             self.addSubview(view)
             
             NSLayoutConstraint.activate(NSLayoutConstraint.constraints(withVisualFormat: "H:|[view]|", options: [], metrics: nil, views: ["view": view]))
             NSLayoutConstraint.activate(NSLayoutConstraint.constraints(withVisualFormat: "V:|[view]|", options: [], metrics: nil, views: ["view": view]))
             */
        }
    }
}

//    override var intrinsicContentSize: CGSize {
//        return CGSize(width: UIViewNoIntrinsicMetric, height: UIViewNoIntrinsicMetric)
//    }</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>B6B1662E-DEBA-4D5A-975C-E9048E4034DC</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetTitle</key>
	<string>Impl: Loading View from NIB implementation</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
